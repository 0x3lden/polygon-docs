site_name: Polygon docs
site_author: Polygon Labs
copyright: Copyright &copy; 2023 Polygon Labs
#remote_branch: gh-pages
#remote_name: gh-deploy

theme:
  name: material
  palette:
    # Palette toggle for light mode
    - scheme: default
      primary: white
      accent: purple
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    # Palette toggle for dark mode
    - scheme: slate
      primary: black
      accent: purple
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  font:
    text: Tahoma
    code: roboto
  language: en
  favicon: img/favicon.ico
  logo: img/logo.png
  features:
    - search.suggest
    - search.highlight
    - search.share
    - navigation.instant
    - navigation.instant.progress
    - navigation.tracking
    - navigation.expansion
    - navigation.integration
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.indexes
    - navigation.sections
    - navigation.path
    - navigation.top
    - navigation.footer
    - toc.follow
    - content.code.copy

nav:
  - Home: index.md
  - CDK:
      - Welcome: 
        - cdk/index.md # marketing landing page
      - Get started:
        - Overview: cdk/get-started/overview.md
        - Quickstart:
          - Validium: cdk/get-started/quickstart-validium.md
          - Rollup: cdk/get-started/quickstart-rollup.md
        - Deploy:
          - Validium: cdk/get-started/deploy-validium.md
          - Rollup: cdk/get-started/deploy-rollup.md
      - How to: 
        - Manage allowlists: cdk/how-to/manage-allowlists.md
      #- Architecture:
      - Specification:
        - Validium vs rollup: cdk/specification/validium-vs-rollup.md
        - Performance benchmarks: cdk/specification/performance-benchmarks.md
      - Concepts:
        - Data availability: cdk/concepts/dac.md
     # - API:
      - Troubleshooting:
        - CDK component repos: cdk/troubleshooting/component-repos.md
  - zkEVM:
      - zkEVM/index.md # marketing landing page
      - Get started:
        - Welcome: zkEVM/welcome.md
        - Quickstart:
          - Connecting to zkEVM: zkEVM/connect-wallet.md
          - Using Polygon faucet: zkEVM/zkevm-faucet.md
          - Bridging assets to zkEVM: zkEVM/bridge-to-zkevm.md
        - Setup nodes:
          - Setup local zkNode: zkEVM/setup-local-node.md
          - Setup production zkNode: zkEVM/setup-production-node.md
        - Deploy full zkEVM:
          - Start here: zkEVM/deployzkevm/step1-fullzkevm.md
          - Install dependencies: zkEVM/deployzkevm/step2-fullzkevm.md
          - Create wallets: zkEVM/deployzkevm/step3-fullzkevm.md
          - Deploy zkNode: zkEVM/deployzkevm/step4-fullzkevm.md
          - Configure prover: zkEVM/deployzkevm/step5-fullzkevm.md
          - Activate forced transactions: zkEVM/deployzkevm/step6-fullzkevm.md
          - Setup a Goërli node: zkEVM/deployzkevm/setup-goerlinode.md
      - How to:
        - Write a contract: zkEVM/autocode-smart-contract.md
        - Deploy a contract with Foundry: zkEVM/using-foundry.md
        - Deploy a contract with Hardhat: zkEVM/using-hardhat.md
        - Verify a contract: zkEVM/verify-smart-contract.md
      - Concepts:
        - Learning zkEVM: zkEVM/learning.md
      - Troubleshooting:
        - Disclosures: zkEVM/troubleshooting/risk-disclosures.md
  - PoS:
      - Welcome: 
        - pos/index.md
      - Get started: 
        - Get started: pos/get-started/index.md
      - How-tos:
        - How-tos: pos/howto/index.md
        - Operating:
          - Operating: pos/howto/operating/index.md
          - Full Node:
            - Full Node: pos/howto/operating/full-node/index.md
            - Manual Install: pos/howto/operating/full-node/manual-install.md
            - Ansible: pos/howto/operating/full-node/ansible.md
            - Docker: pos/howto/operating/full-node/docker.md
            - Google Cloud: pos/howto/operating/full-node/gcp.md
          - Validator Node:
            - Validator Node: pos/howto/operating/validator-node/index.md
            - Manual Install: pos/howto/operating/validator-node/manual-install.md
            - Ansible: pos/howto/operating/validator-node/ansible.md
            - Staking: pos/howto/operating/validator-node/staking.md
          - Access Node: pos/howto/operating/access-node.md
          - Archive Node: pos/howto/operating/archive-node.md
          - Erigon Node: pos/howto/operating/erigon-node.md
        - Bridging:
          - Bridging: pos/howto/bridging/index.md
          - Ethereum-Polygon: pos/howto/bridging/ethereum-polygon/index.md
          - L1-L2 Communication: pos/howto/bridging/l1-l2-communication/index.md
        - Smart Contracts:
          - Smart Contracts: pos/howto/smart-contracts/index.md
          - Alchemy: pos/howto/smart-contracts/alchemy.md
          - ChainIDE: pos/howto/smart-contracts/chainide.md
          - ChainStack: pos/howto/smart-contracts/chainstack.md
          - GetBlock: pos/howto/smart-contracts/getblock.md
          - QuickNode: pos/howto/smart-contracts/quicknode.md
          - SmartPress: pos/howto/smart-contracts/smartpress.md
          - ThirdWeb: pos/howto/smart-contracts/thirdweb.md
        - Polygon DID: pos/howto/polygon-did.md
      - Architecture:
          - pos/architecture/index.md
          - Bor:
            - Bor: pos/architecture/bor/index.md
            - Consensus: pos/architecture/bor/consensus.md
            - State Sync: pos/architecture/bor/state-sync.md
            - Network Configuration: pos/architecture/bor/network-config.md
            - Snapshots: pos/architecture/bor/snapshots.md
          - Heimdall:
            - Heimdall: pos/architecture/heimdall/index.md
            - Checkpoint: pos/architecture/heimdall/checkpoint.md
            - Governance: pos/architecture/heimdall/governance.md
            - Key Management: pos/architecture/heimdall/key-management.md
            - Stdtx: pos/architecture/heimdall/stdtx.md
            - Modules:
              - Modules: pos/architecture/heimdall/modules/index.md
              - Ante Handler: pos/architecture/heimdall/modules/antehandler.md
              - Auth: pos/architecture/heimdall/modules/auth.md
              - Bank: pos/architecture/heimdall/modules/bank.md
              - Bor: pos/architecture/heimdall/modules/bor.md
              - Chain Manager: pos/architecture/heimdall/modules/chain-manager.md
              - Checkpoint: pos/architecture/heimdall/modules/checkpoint.md
              - Clerk: pos/architecture/heimdall/modules/clerk.md
              - Staking: pos/architecture/heimdall/modules/staking.md
              - Topup: pos/architecture/heimdall/modules/topup.md
            - FAQ: pos/architecture/heimdall/faq.md
      - Specification:
          - pos/spec/index.md
      - Concepts:
          - Concepts: pos/concepts/index.md
          - Tokens:
            - Tokens: pos/concepts/tokens/index.md
            - POL: pos/concepts/tokens/pol.md
            - MATIC: pos/concepts/tokens/matic.md
          - Transactions:
            - Transactions: pos/concepts/transactions/index.md
            - EIP-1559: pos/concepts/transactions/eip-1559.md
            - EIP-4337: pos/concepts/transactions/eip-4337.md
            - Meta-Transactions: pos/concepts/transactions/meta-transactions.md
      - API:
          - pos/api/index.md
  - Miden:
      - Overview: miden/index.md
      #- Miden playground: https://0xpolygonmiden.github.io/examples/
      #- Miden zkRollup docs: https://0xpolygonmiden.github.io/miden-base/introduction.html
      #- Miden VM docs: https://0xpolygonmiden.github.io/miden-vm/
  - Tools: 
      - tools/index.md
      - Using Web3Modal SDK: tools/using-web3modal.md
  - Tutorials:
      - Tutorials: tutorials/index.md
      - Build a Validium-based App-chain: tutorials/build-validium.md
      - Deploy a zkEVM Rollup: tutorials/deploy-zkEVM.md
      - Deploy a Miden Rollup: tutorials/deploy-miden.md
      - Build a dApp on zkEVM: tutorials/build-zkEVM-dapp.md
      - Run a PoS node: tutorials/run-pos-node.md
      - Become a PoS Validator: tutorials/become-pos-validator.md

extra:
  # We'll add language options back when we actually support them.
  # alternate:
  #  - name: Español
  #    link: /es/
  #    lang: es
  #  - name: Chinese (Simplified)
  #    link: /zh/
  #    lang: zh
  generator: false
  analytics:
  #  provider: google
  #  property: G-XXXXXXXXXX
  social:
    - icon: fontawesome/solid/circle-question
      link: https://support.polygon.technology/support/solutions
    - icon: fontawesome/solid/globe
      link: https://polygon.technology/
    - icon: fontawesome/brands/github
      link: https://github.com/0xPolygon/wiki
  feedback:
    title: Was this page helpful?
    ratings:
      - icon: fontawesome/regular/face-grin-stars
        name: This page was helpful
        data: 1
        note: >-
          Thanks for your feedback!
      - icon: fontawesome/regular/face-grimace
        name: This page could be improved
        data: 0
        note: >-
          Thanks for your feedback! Help us improve this page by
          using our <a href="..." target="_blank" rel="noopener">feedback form</a>.
  consent:
    title: Cookie consent
    description: >-
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to
      make our documentation better.

extra_css:
  - _site_essentials/stylesheets/extra.css
  - _site_essentials/stylesheets/section-nav.css
  - https://fonts.googleapis.com/icon?family=Material+Icons

markdown_extensions:
  - toc:
      permalink: true
      permalink_title: Link to this section
      toc_depth: 4
  - codehilite
  - markdown_include.include:
      base_path: docs
  - admonition
  - footnotes
  - def_list
  - attr_list
  - abbr
  - pymdownx.tabbed
  - pymdownx.superfences
  - pymdownx.arithmatex
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.keys
  - pymdownx.details
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
  - pymdownx.caret
  - meta
  - smarty
  - pymdownx.extra

plugins:
  - search
  - open-in-new-tab

validation:
  absolute_links: ignore
