site_name: Polygon Knowledge Layer
site_author: Polygon Labs
copyright: Copyright &copy; 2023 Polygon Labs
repo_name: Polygon Knowledge Layer
repo_url: https://github.com/0xPolygon/polygon-docs
edit_uri: edit/main/docs/
#remote_branch: gh-pages
#remote_name: gh-deploy

theme:
  name: material
  palette:
    # Palette toggle for light mode
    - scheme: default
      primary: white
      accent: purple
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    # Palette toggle for dark mode
    - scheme: slate
      primary: black
      accent: purple
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  language: en
  favicon: img/favicon.ico
  logo: img/logo.png
  features:
    - search.suggest
    - search.highlight
    - search.share
    - navigation.instant
    - navigation.instant.progress
    - navigation.tracking
    - navigation.expansion
    - navigation.integration
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.indexes
    - navigation.sections
    - navigation.path
    - navigation.top
    - navigation.footer
    - toc.follow
    - content.code.copy
    - content.action.edit
    - content.action.view

nav:
  - Home: index.md
  - CDK:
      - Welcome: 
        - cdk/index.md # marketing landing page
      - Get started:
        - Overview: cdk/get-started/overview.md
        - Quickstart:
          - Validium: cdk/get-started/quickstart-validium.md
          - Rollup: cdk/get-started/quickstart-rollup.md
        - Deploy:
          - Validium: cdk/get-started/deploy-validium.md
          - Rollup: cdk/get-started/deploy-rollup.md
      - How to: 
        - Manage policies - allowlists, denylists: cdk/how-to/manage-allowlists.md
      #- Architecture:
      - Specification:
        - Validium vs rollup: cdk/specification/validium-vs-rollup.md
      - Concepts:
        - Data availability: cdk/concepts/dac.md
     # - API:
      - Troubleshooting:
        - CDK component repos: cdk/troubleshooting/component-repos.md
  - zkEVM:
      - zkEVM/index.md # marketing landing page
      - Get started:
        - Welcome: zkEVM/welcome.md
        - Quickstart:
          - Connecting to zkEVM: zkEVM/connect-wallet.md
          - Using Polygon faucet: zkEVM/zkevm-faucet.md
          - Bridging assets to zkEVM: zkEVM/bridge-to-zkevm.md
        - Setup nodes:
          - Setup local zkNode: zkEVM/setup-local-node.md
          - Setup production zkNode: zkEVM/setup-production-node.md
        - Deploy full zkEVM:
          - Start here: zkEVM/deployzkevm/step1-fullzkevm.md
          - Install dependencies: zkEVM/deployzkevm/step2-fullzkevm.md
          - Create wallets: zkEVM/deployzkevm/step3-fullzkevm.md
          - Deploy zkNode: zkEVM/deployzkevm/step4-fullzkevm.md
          - Configure prover: zkEVM/deployzkevm/step5-fullzkevm.md
          - Activate forced transactions: zkEVM/deployzkevm/step6-fullzkevm.md
          - Setup a GoÃ«rli node: zkEVM/deployzkevm/setup-goerlinode.md
      - How to:
        - Write a contract: zkEVM/autocode-smart-contract.md
        - Deploy a contract with Foundry: zkEVM/using-foundry.md
        - Deploy a contract with Hardhat: zkEVM/using-hardhat.md
        - Verify a contract: zkEVM/verify-smart-contract.md
      - Architecture:
        - Architecture: zkEVM/architecture/index.md
        - zkEVM Protocol:
          - Introduction: zkEVM/protocol/introduction.md
          - State management: zkEVM/protocol/state-management.md
          - Trasaction life cycle:
            - Submit transactions: zkEVM/protocol/submit-transaction.md
            - Transaction execution: zkEVM/protocol/transaction-execution.md
            - Transaction batching: zkEVM/protocol/transaction-batching.md
            - Batch sequencing: zkEVM/protocol/batch-sequencing.md
            - Batch aggregation: zkEVM/protocol/batch-aggregation.md
          - Incentive mechanism: zkEVM/protocol/incentive-mechanism.md
          - Protocol upgradability: zkEVM/protocol/upgradability.md
          - Admin role and governance: zkEVM/protocol/admin-role.md
          - Upgrade process: zkEVM/protocol/zkevm-upgrades-process.md
          - Security council: zkEVM/protocol/security-council.md
          - Malfunction resistance:
            - Force batches: zkEVM/protocol/sequencer-resistance.md
            - Force verification: zkEVM/protocol/aggregator-resistance.md
            - Emergency state: zkEVM/protocol/emergency-state.md
          - zkEVM bridge:
            - Bridge introduction: zkEVM/protocol/zkevm-bridge.md
            - Exit trees: zkEVM/protocol/exit-tree.md
            - Smart contracts: zkEVM/protocol/bridge-smart-contract.md
            - Flow of assets: zkEVM/protocol/flow-of-assets.md
          - LXLY bridge: zkEVM/protocol/lxly-bridge.md
        - zkNode: zkEVM/architecture/zknode/index.md
        - zkProver:
          - zkProver Overview: zkEVM/architecture/zkprover/zkprover-overview.md
          - Main state machaine: 
            - Introducing Main SM: zkEVM/architecture/zkprover/intro-main-sm.md
            - As a processor: zkEVM/architecture/zkprover/the-processor.md
          - STARK recursion:
            - Introducing STARK recursion: zkEVM/architecture/zkprover/intro-stark-recursion.md
            - Proving tools and techniques: zkEVM/architecture/zkprover/proving-tools.md
            - Composition, Recursion and Aggregation: zkEVM/architecture/zkprover/stark-recursion-detail.md
            - Recursion sub-process: zkEVM/architecture/zkprover/recursion-sub-process.md
            - Proving architecture: zkEVM/architecture/zkprover/proving-architecture.md
            - CIRCOM in zkProver: zkEVM/architecture/zkprover/circom-in-zkprover.md
            - Proving setup phase: zkEVM/architecture/zkprover/proving-setup-phase.md
            - Intermediate steps: zkEVM/architecture/zkprover/intermediate-recursion.md
            - Final recursion step: zkEVM/architecture/zkprover/final-recursion-step.md
            - Proof generation phase: zkEVM/architecture/zkprover/proof-generation-phase.md
          - Storage state machine:
            - Introducing Storage SM: zkEVM/architecture/zkprover/intro-storage-sm.md
            - Creating keys and paths: zkEVM/architecture/zkprover/construct-key-path.md
            - Storage SM mechanism: zkEVM/architecture/zkprover/storage-sm-mechanism.md
            - Executor and PIL: zkEVM/architecture/zkprover/executor-pil.md
          - Arithmetic state machine: zkEVM/architecture/zkprover/arithmetic-sm.md
          - Binary state machine: zkEVM/architecture/zkprover/binary-sm.md
          - Memory state machine: zkEVM/architecture/zkprover/memory-sm.md
          - Memory-Align state machine: zkEVM/architecture/zkprover/mem-align-sm.md
          - Hashing state machines:
            - Introducing hashing state machines: zkEVM/architecture/zkprover/intro-hashing-sm.md
            - Keccak framework: zkEVM/architecture/zkprover/keccak-framework.md
            - Padding-kk state machine: zkEVM/architecture/zkprover/paddingkk-sm.md
            - Padding-kk-bit state machine: zkEVM/architecture/zkprover/paddingkk-bit-sm.md
            - Bits2Field state machine: zkEVM/architecture/zkprover/bits2field-sm.md
            - Keccak-f state machine: zkEVM/architecture/zkprover/keccakf-sm.md
            - Poseidon state machine: zkEVM/architecture/zkprover/poseidon-sm.md
      - Specifications:
        - Polynomial Identity Language:
          - Polynomial Identity Language: zkEVM/specifications/pil/index.md
          - Simple example: zkEVM/specifications/pil/simple-example.md
          - Modular programs: zkEVM/specifications/pil/modular-programs.md
          - Connection arguments: zkEVM/specifications/pil/connection-arguments.md
          - Cyclicity in PIL: zkEVM/specifications/pil/cyclicity-in-pil.md
          - Filling polynomials: zkEVM/specifications/pil/filling-polynomials.md
          - Generating proofs: zkEVM/specifications/pil/generating-proofs.md
          - Permutation arguments: zkEVM/specifications/pil/permutation-arguments.md
          - Inclusion arguments: zkEVM/specifications/pil/inclusion-arguments.md
          - Compiling using PILCOM: zkEVM/specifications/pil/compiling-using-pilcom.md
          - Configuration files: zkEVM/specifications/pil/configuration-files.md
          - PLONK in PIL: zkEVM/specifications/pil/plonk-in-pil.md
          - Public values: zkEVM/specifications/pil/public-values.md
        - zkASM:
          - zkASM: zkEVM/specifications/zkasm/index.md
          - Basic Syntax: zkEVM/specifications/zkasm/basic-syntax.md
          - Examples: zkEVM/specifications/zkasm/examples.md
        - EVM vs. zkEVM: zkEVM/specifications/evm-differences.md
      - Concepts:
        - EVM basics: zkEVM/concepts/evm-basics.md
        - Sparse merkle trees:
          - Merkle trees: zkEVM/concepts/sparse-merkle-tree.md
          - Constructing simple SMTs: zkEVM/concepts/simple-smt.md
          - SMT concepts: zkEVM/concepts/detailed-smt.md
          - Operations on SMTs: zkEVM/concepts/basic-smt-ops.md
        - mFibonnaci state machine:
          - Design approach: zkEVM/concepts/mfibonacci.md
          - An example: zkEVM/concepts/mfibonacci-example.md
          - Commitment scheme: zkEVM/concepts/commitment-scheme.md
          - Verification scheme: zkEVM/concepts/verification-scheme.md
          - PIL-STARK process: zkEVM/concepts/pil-stark.md
          - PIL-STARK demo: zkEVM/concepts/pil-stark-demo.md
        - Generic state machine: 
          - Generic SM introduction: zkEVM/concepts/intro-generic-sm.md
          - Execution trace: zkEVM/concepts/exec-trace-correct.md
          - Ending programs: zkEVM/concepts/ending-program.md
          - Program counter: zkEVM/concepts/program-counter.md
          - Plookup: zkEVM/concepts/plookup.md
        - CIRCOM: zkEVM/concepts/circom-intro-brief.md
      - Troubleshooting:
        - Disclosures: zkEVM/troubleshooting/risk-disclosures.md
  - PoS:
      - pos/index.md # marketing landing page
      - Get started: 
        - Get started: pos/get-started/index.md
        - Building on Polygon: pos/get-started/building-on-polygon.md
      - How to:
        - How to: pos/how-to/index.md
        - Operate a node:
          - Operate a node: pos/how-to/operating/index.md
          - Full node:
            - Full node: pos/how-to/operating/full-node/index.md
            - Manual install: pos/how-to/operating/full-node/manual-install.md
            - Ansible: pos/how-to/operating/full-node/ansible.md
            - Docker: pos/how-to/operating/full-node/docker.md
            - Google cloud: pos/how-to/operating/full-node/gcp.md
          - Validator node:
            - Validator node: pos/how-to/operating/validator-node/index.md
            - Manual install: pos/how-to/operating/validator-node/manual-install.md
            - Ansible: pos/how-to/operating/validator-node/ansible.md
            - Staking: pos/how-to/operating/validator-node/staking.md
          - Access node: pos/how-to/operating/access-node.md
          - Archive node: pos/how-to/operating/archive-node.md
          - Erigon node: pos/how-to/operating/erigon-node.md
        - Bridge layers:
          - Bridge layers: pos/how-to/bridging/index.md
          - Ethereum-Polygon:
            - Ethereum-Polygon: pos/how-to/bridging/ethereum-polygon/index.md
            - Ethereum to MATIC: pos/how-to/bridging/ethereum-polygon/ethereum-to-matic.md
            - MATIC to Ethereum: pos/how-to/bridging/ethereum-polygon/matic-to-ethereum.md
            - Submit mapping request: pos/how-to/bridging/ethereum-polygon/submit-mapping-request.md
          - L1-L2 communication:
            - L1-L2 communication: pos/how-to/bridging/l1-l2-communication/index.md
            - State transfer: pos/how-to/bridging/l1-l2-communication/state-transfer.md
            - Bridging with FxPortal: pos/how-to/bridging/l1-l2-communication/fx-portal.md
        - Work with smart contracts:
          - Work with smart contracts: pos/how-to/smart-contracts/index.md
          - Alchemy: pos/how-to/smart-contracts/alchemy.md
          - ChainIDE: pos/how-to/smart-contracts/chainide.md
          - ChainStack: pos/how-to/smart-contracts/chainstack.md
          - GetBlock: pos/how-to/smart-contracts/getblock.md
          - QuickNode: pos/how-to/smart-contracts/quicknode.md
          - SmartPress: pos/how-to/smart-contracts/smartpress.md
          - ThirdWeb: pos/how-to/smart-contracts/thirdweb.md
        - Polygon DID: pos/how-to/polygon-did.md
      - Architecture:
          - pos/architecture/index.md
          - Bor:
            - Bor: pos/architecture/bor/index.md
            - Consensus: pos/architecture/bor/consensus.md
            - State sync: pos/architecture/bor/state-sync.md
            - Network configuration: pos/architecture/bor/network-config.md
            - Snapshots: pos/architecture/bor/snapshots.md
            - Commands: pos/architecture/bor/commands.md
          - Heimdall:
            - Heimdall: pos/architecture/heimdall/index.md
            - Checkpoint: pos/architecture/heimdall/checkpoint.md
            - Governance: pos/architecture/heimdall/governance.md
            - Key management: pos/architecture/heimdall/key-management.md
            - Stdtx: pos/architecture/heimdall/stdtx.md
            - Modules:
              - Modules: pos/architecture/heimdall/modules/index.md
              - Ante handler: pos/architecture/heimdall/modules/antehandler.md
              - Auth: pos/architecture/heimdall/modules/auth.md
              - Bank: pos/architecture/heimdall/modules/bank.md
              - Bor: pos/architecture/heimdall/modules/bor.md
              - Chain manager: pos/architecture/heimdall/modules/chain-manager.md
              - Checkpoint: pos/architecture/heimdall/modules/checkpoint.md
              - Staking: pos/architecture/heimdall/modules/staking.md
              - Topup: pos/architecture/heimdall/modules/topup.md
            - FAQ: pos/architecture/heimdall/faq.md
      - Specification:
          - pos/spec/index.md
      - Concepts:
          - Concepts: pos/concepts/index.md
          - Tokens:
            - Tokens: pos/concepts/tokens/index.md
            - POL: pos/concepts/tokens/pol.md
            - MATIC: pos/concepts/tokens/matic.md
          - Transactions:
            - Transactions: pos/concepts/transactions/index.md
            - EIP-1559: pos/concepts/transactions/eip-1559.md
            - EIP-4337: pos/concepts/transactions/eip-4337.md
            - Meta-transactions: pos/concepts/transactions/meta-transactions.md
      - API:
          - pos/api/index.md
  - Miden:
      - Overview: miden/index.md
      - Miden playground: https://0xpolygonmiden.github.io/examples/
      - Miden zkRollup docs: https://0xpolygonmiden.github.io/miden-base/introduction.html
      - Miden VM docs: https://0xpolygonmiden.github.io/miden-vm/
  - Tools: 
      - tools/index.md
      - Smart contract development: 
          - Hardhat: tools/smart-contracts/hardhat.md
          - Truffle: tools/smart-contracts/truffle.md
          - Remix: tools/smart-contracts/remix.md
          - Replit: tools/smart-contracts/replit.md
      - Gas:
          - Polygon MATIC faucet: tools/gas/matic-faucet.md
          - Polygon gas station: tools/gas/polygon-gas-station.md
      - Data:
          - The Graph: 
              - Overview: tools/data/the-graph/overview.md
              - Data: tools/data/the-graph/data.md
              - Entities: tools/data/the-graph/entities.md
              - Queries: tools/data/the-graph/queries.md
          - Covalent: tools/data/covalent.md
          - Flair: tools/data/flair.md
          - PARSIQ: tools/data/parsiq.md
      - Matic.js:
          - Installation:  tools/matic-js/installation.md
          - API overview:  tools/matic-js/api-architecture.md
          - Get started:  tools/matic-js/get-started.md
          - Setup:
              - Ethers:  tools/matic-js/setup/ethers.md
              - Web3js:  tools/matic-js/setup/web3js.md
          - Set proof API:  tools/matic-js/set-proof-api.md
          - FX portal bridge:  tools/matic-js/fx-portal.md
          - zkEVM:
              - Initialize:  tools/matic-js/zkevm/initialize.md
              - ERC20:  tools/matic-js/zkevm/erc20.md
              - Common methods:  tools/matic-js/zkevm/common-methods.md
          - POS:
              - POS client:  tools/matic-js/pos/client.md
              - Common methods:
                  - Deposit ETH:  tools/matic-js/pos/deposit-ether.md
                  - isCheckPointed:  tools/matic-js/pos/is-check-pointed.md
                  - isDeposited:  tools/matic-js/pos/is-deposited.md
              - ERC20:
                  - Overview: tools/matic-js/pos/erc20/index.md
                  - approveMax:  tools/matic-js/pos/erc20/approve-max.md
                  - approve:  tools/matic-js/pos/erc20/approve.md
                  - deposit:  tools/matic-js/pos/erc20/deposit.md
                  - getAllowance:  tools/matic-js/pos/erc20/get-allowance.md
                  - getBalance:  tools/matic-js/pos/erc20/get-balance.md
                  - isWithdrawExited:  tools/matic-js/pos/erc20/is-withdraw-exited.md
                  - transfer:  tools/matic-js/pos/erc20/transfer.md
                  - withdrawExitFaster:  tools/matic-js/pos/erc20/withdraw-exit-faster.md
                  - withdrawExit:  tools/matic-js/pos/erc20/withdraw-exit.md
                  - withdrawStart:  tools/matic-js/pos/erc20/withdraw-start.md
              - ERC721:
                  - Overview:  tools/matic-js/pos/erc721/index.md
                  - approveAll:  tools/matic-js/pos/erc721/approve-all.md
                  - approve:  tools/matic-js/pos/erc721/approve.md
                  - depositMany:  tools/matic-js/pos/erc721/deposit-many.md
                  - deposit:  tools/matic-js/pos/erc721/deposit.md
                  - getAllTokens:  tools/matic-js/pos/erc721/get-all-tokens.md
                  - getTokenIdAtIndexForUser:  tools/matic-js/pos/erc721/get-token-id-at-index-for-user.md
                  - getTokensCount:  tools/matic-js/pos/erc721/get-tokens-count.md
                  - isApprovedAll:  tools/matic-js/pos/erc721/is-approved-all.md
                  - isApproved:  tools/matic-js/pos/erc721/is-approved.md
                  - isWithdrawExitedMany:  tools/matic-js/pos/erc721/is-withdraw-exited-many.md
                  - isWithdrawExited:  tools/matic-js/pos/erc721/is-withdraw-exited.md
                  - transfer:  tools/matic-js/pos/erc721/transfer.md
                  - withdrawExitFasterMany:  tools/matic-js/pos/erc721/withdraw-exit-faster-many.md
                  - withdrawExitFaster:  tools/matic-js/pos/erc721/withdraw-exit-faster.md
                  - withdrawExitMany:  tools/matic-js/pos/erc721/withdraw-exit-many.md
                  - withdrawExit:  tools/matic-js/pos/erc721/withdraw-exit.md
                  - withdrawStartMany:  tools/matic-js/pos/erc721/withdraw-start-many.md
                  - withdrawStartWithMetaData:  tools/matic-js/pos/erc721/withdraw-start-with-meta-data.md
                  - withdrawStart:  tools/matic-js/pos/erc721/withdraw-start.md
              - ERC1155:
                  - approve-all-for-mintable:  tools/matic-js/pos/erc1155/approve-all-for-mintable.md
                  - approve-all:  tools/matic-js/pos/erc1155/approve-all.md
                  - deposit-many:  tools/matic-js/pos/erc1155/deposit-many.md
                  - deposit:  tools/matic-js/pos/erc1155/deposit.md
                  - get-balance:  tools/matic-js/pos/erc1155/get-balance.md
                  - index:  tools/matic-js/pos/erc1155/index.md
                  - is-approved-all:  tools/matic-js/pos/erc1155/is-approved-all.md
                  - is-withdraw-exited-many:  tools/matic-js/pos/erc1155/is-withdraw-exited-many.md
                  - is-withdraw-exited:  tools/matic-js/pos/erc1155/is-withdraw-exited.md
                  - transfer:  tools/matic-js/pos/erc1155/transfer.md
                  - withdraw-exit-faster-many:  tools/matic-js/pos/erc1155/withdraw-exit-faster-many.md
                  - withdraw-exit-faster:  tools/matic-js/pos/erc1155/withdraw-exit-faster.md
                  - withdraw-exit-many:  tools/matic-js/pos/erc1155/withdraw-exit-many.md
                  - withdraw-exit:  tools/matic-js/pos/erc1155/withdraw-exit.md
                  - withdraw-start-many:  tools/matic-js/pos/erc1155/withdraw-start-many.md
                  - withdraw-start:  tools/matic-js/pos/erc1155/withdraw-start.md
          - Advanced:
              - ABI manager:  tools/matic-js/advanced/abi-manager.md
              - Exit util:  tools/matic-js/advanced/exit-util.md
              - Plugin:  tools/matic-js/advanced/plugin.md
      - Storage: 
          - IPFS: tools/storage/ipfs.md
          - Filecoin: tools/storage/filecoinhelpers.md
          - Crust network: tools/storage/crusthelpers.md
          - Mint NFTs: tools/storage/nftstorage.md
      - Oracles:
          - Getting started: tools/oracles/getting-started.md
          - API3: tools/oracles/api3.md
          - Bandchain: tools/oracles/bandchain.md
          - Band standard dataset: tools/oracles/bandstandarddataset.md
          - Chainlink: tools/oracles/chainlink.md
          - DIA: tools/oracles/diadataoracles.md
          - UMA optimistic oracle: tools/oracles/optimisticoracle.md
          - Razor: tools/oracles/razor.md
          - Tellor: tools/oracles/tellor.md
          - Umbrella: tools/oracles/umbrella.md
      - Wallets:
          - Getting started:  tools/wallets/getting-started.md
          - Polygon wallet:
              - Web wallet v3 guide: tools/wallets/polygon-web-wallet/web-wallet-v3-guide.md
              - Add a custom token: tools/wallets/polygon-web-wallet/adding-a-custom-token.md
          - Third-party apps:
              - Metamask:
                  - Overview: tools/wallets/metamask/index.md
                  - Create MetaMask wallet: tools/wallets/metamask/create-metamask-wallet.md
                  - Add Polygon network:  tools/wallets/metamask/add-polygon-network.md
                  - Configure custom tokens:  tools/wallets/metamask/custom-tokens.md
                  - Create and import accounts:  tools/wallets/metamask/multiple-accounts.md
              - Venly:
                  - Intro:  tools/wallets/venly/index.md
                  - Create wallet:  tools/wallets/venly/create-wallet.md
                  - Add network:  tools/wallets/venly/add-network.md
                  - Add custom token:  tools/wallets/venly/custom-tokens.md
              - Wallet link: tools/wallets/wallet-link.md
              - Fortmatic: tools/wallets/fortmatic.md
              - Portis:  tools/wallets/portis.md
              - Torus:  tools/wallets/torus.md          
              - WalletConnect:  tools/wallets/walletconnect.md
              - SlashAuth:  tools/wallets/slashauth.md
              - Plaid wallet onboard:  tools/wallets/plaid-wallet-onboard.md
              - Particle network:  tools/wallets/particle-network.md
              - Web3Modal: tools/wallets/using-web3modal.md
      - Block explorers:
          - Polygon: https://polygonscan.com/ 
          - zkEVM: https://zkevm.polygonscan.com/
          - zkEVM testnet: https://explorer-ui.mainnet.zkevm-test.net/
          - OKLink: https://www.oklink.com/polygon
  - Learn:
      - learn/index.md

extra:
  generator: false
  analytics:
  #  provider: google
  #  property: G-XXXXXXXXXX
  #  feedback:  # feedback form only works when Google Analytics is set up and working
  #    title: Was this page helpful?
  #    ratings:
  #      - icon: fontawesome/regular/face-grin-stars
  #        name: This page was helpful
  #        data: 1
  #        note: >-
  #          Thanks for your feedback!
  #      - icon: fontawesome/regular/face-grimace
  #        name: This page could be improved
  #        data: 0
  #        note: >-
  #          Thanks for your feedback! Help us improve this page by
  #          using our <a href="..." target="_blank" rel="noopener">feedback form</a>.
  social:
    - icon: fontawesome/solid/circle-question
      link: https://support.polygon.technology/support/solutions
    - icon: fontawesome/solid/globe
      link: https://polygon.technology/
    - icon: fontawesome/brands/github
      link: https://github.com/0xPolygon/polygon-docs
  consent:
    title: Cookie consent
    description: >-
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to
      make our documentation better.

extra_css:
  - _site_essentials/stylesheets/extra.css
  - _site_essentials/stylesheets/section-nav.css
  - https://fonts.googleapis.com/icon?family=Material+Icons
  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css

markdown_extensions:
  - toc:
      permalink: true
      permalink_title: Link to this section
      toc_depth: 4
  - codehilite
  - markdown_include.include:
      base_path: docs
  - admonition
  - footnotes
  - def_list
  - attr_list
  - abbr
  - pymdownx.tabbed
  - pymdownx.superfences
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.keys
  - pymdownx.details
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
  - pymdownx.caret
  - meta
  - smarty
  - pymdownx.extra

plugins:
  - search
  - open-in-new-tab
#  - git-revision-date-localized:
#      enable_creation_date: true
#      fallback_to_build_date: true
#  - git-committers:
#      repository: 0xPolygon/polygon-docs
#      #branch: main
#      exclude:
#        - README.md

validation:
  absolute_links: warn

extra_javascript:
  - js/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
  - js/katex.js 
  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js  
  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js
  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css
